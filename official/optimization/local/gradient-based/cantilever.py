#!/usr/bin/env python3
import numpy as np
import dakota.interfacing as di

# These variables are fixed and used in response computations.
R = 40000.0
E = 2.9E+7
X = 500.0
Y = 1000.0
L = 100.0
D0 = 2.2535

# Functions to compute the three responses.
def area(w, t):
    a = w*t
    return a

def stress(w, t, X, Y, R):
    s = (600*Y)/(w*t**2) + (600*X)/(t*w**2)
    s_constraint = s/R - 1
    return s_constraint

def displacement(w, t, L, X, Y, D0):
    d = (4*L**3)/(E*w*t)*np.sqrt((Y/t**2.0)**2.0 + 
          (X/w**2.0)**2.0)
    d_constraint = d/D0 - 1
    return d_constraint

# Read in the variable values generated by Dakota.
# di.read_parameters_file() is a Dakota-provided Python utility.
params, results = di.read_parameters_file()

# Compute the responses using the Dakota-provided variable values.
results[0].function = area(params["w"], params["t"])
results[1].function = stress(params["w"], params["t"], X, Y, R)
results[2].function = displacement(params["w"], params["t"], L, X, Y, D0)

# Write out the response values for Dakota.
results.write()
