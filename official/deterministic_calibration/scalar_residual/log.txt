Dakota version 6.7 released Nov 15 2017.
Repository revision 0616ac7 (2017-11-10) built Nov 13 2017 03:30:07.
Running MPI Dakota executable in serial mode.
Start time: Fri Apr  6 11:36:22 2018

-----------------------
Begin DAKOTA input file
dakota_cal.in
-----------------------

method
  nl2sol

variables
  continuous_design 2
    descriptors  'E0'      'Es'
    lower_bounds 28e6  -10000.0
    upper_bounds 32e6       0.0

  continuous_state 1
    descriptors     'Y'
    initial_state 400.0

responses
  descriptors 'displacement01'
              'displacement02
              'displacement03
              'displacement04
              'displacement05
              'displacement06
              'displacement07
              'displacement08
              'displacement09
              'displacement10
              'displacement11
              'displacement12
              'displacement13
              'displacement14
              'displacement15
              'displacement16
              'displacement17
              'displacement18
              'displacement19
              'displacement20

  calibration_terms 20
  numerical_gradients
  no_hessians

interface
  fork
    analysis_driver 'python cantilever_residuals.py'
    parameters_file 'params.in'
    results_file 'results.out'
    file_save file_tag
    analysis_components '20'
---------------------
End DAKOTA input file
---------------------

Using Dakota input file 'dakota_cal.in'
Writing new restart file 'dakota.rst'.

>>>>> Executing environment.

>>>>> Running nl2sol iterator.

NONDEFAULT VALUES...

RFCTOL.... V(32) = 0.0001000000
XCTOL..... V(33) = 1.000000e-05
XFTOL..... V(34) = 1.000000e-08

---------------------
Begin Evaluation    1
---------------------
Parameters for evaluation 1:
                      2.8000000000e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.1 results.out.1

Active response data for evaluation 1:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7856707249e-01 displacement01
                      5.1560714249e-01 displacement02
                      2.2376791249e-01 displacement03
                      3.6855913249e-01 displacement04
                      3.7933061249e-01 displacement05
                      1.8825180249e-01 displacement06
                      1.6042020249e-01 displacement07
                      2.7915287249e-01 displacement08
                      1.8275876249e-01 displacement09
                      3.7712697249e-01 displacement10
                      6.0829024868e-03 displacement11
                     -1.0186597513e-02 displacement12
                     -3.8713797513e-02 displacement13
                      2.2603924249e-01 displacement14
                      2.4296562487e-02 displacement15
                     -4.2672757513e-02 displacement16
                     -1.1668563751e-01 displacement17
                     -1.3906340751e-01 displacement18
                     -2.7662349751e-01 displacement19
                     -2.4515247513e-02 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation    2
---------------------
Parameters for evaluation 2:
                      2.8028000000e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.2 results.out.2

Active response data for evaluation 2:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7180135144e-01 displacement01
                      5.0884142144e-01 displacement02
                      2.1700219144e-01 displacement03
                      3.6179341144e-01 displacement04
                      3.7256489144e-01 displacement05
                      1.8148608144e-01 displacement06
                      1.5365448144e-01 displacement07
                      2.7238715144e-01 displacement08
                      1.7599304144e-01 displacement09
                      3.7036125144e-01 displacement10
                     -6.8281856466e-04 displacement11
                     -1.6952318565e-02 displacement12
                     -4.5479518565e-02 displacement13
                      2.1927352144e-01 displacement14
                      1.7530841435e-02 displacement15
                     -4.9438478565e-02 displacement16
                     -1.2345135856e-01 displacement17
                     -1.4582912856e-01 displacement18
                     -2.8338921856e-01 displacement19
                     -3.1280968565e-02 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation    3
---------------------
Parameters for evaluation 3:
                      2.8000000000e+07 E0
                     -1.0000000000e-05 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.3 results.out.3

Active response data for evaluation 3:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7856707244e-01 displacement01
                      5.1560714250e-01 displacement02
                      2.2376791257e-01 displacement03
                      3.6855913264e-01 displacement04
                      3.7933061270e-01 displacement05
                      1.8825180277e-01 displacement06
                      1.6042020284e-01 displacement07
                      2.7915287290e-01 displacement08
                      1.8275876297e-01 displacement09
                      3.7712697303e-01 displacement10
                      6.0829031004e-03 displacement11
                     -1.0186596833e-02 displacement12
                     -3.8713796767e-02 displacement13
                      2.2603924330e-01 displacement14
                      2.4296563365e-02 displacement15
                     -4.2672756569e-02 displacement16
                     -1.1668563650e-01 displacement17
                     -1.3906340644e-01 displacement18
                     -2.7662349637e-01 displacement19
                     -2.4515246304e-02 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.4163289469e-07  4.8374637629e-06 ] displacement01 gradient
 [ -2.4163289469e-07 -1.7821299991e-06 ] displacement02 gradient
 [ -2.4163289469e-07 -8.4019013968e-06 ] displacement03 gradient
 [ -2.4163289469e-07 -1.5021672795e-05 ] displacement04 gradient
 [ -2.4163289469e-07 -2.1641355374e-05 ] displacement05 gradient
 [ -2.4163289469e-07 -2.8261215590e-05 ] displacement06 gradient
 [ -2.4163289469e-07 -3.4880809352e-05 ] displacement07 gradient
 [ -2.4163289469e-07 -4.1500491932e-05 ] displacement08 gradient
 [ -2.4163289469e-07 -4.8120174512e-05 ] displacement09 gradient
 [ -2.4163289469e-07 -5.4739945909e-05 ] displacement10 gradient
 [ -2.4163289469e-07 -6.1359539671e-05 ] displacement11 gradient
 [ -2.4163289469e-07 -6.7979399887e-05 ] displacement12 gradient
 [ -2.4163289469e-07 -7.4599082467e-05 ] displacement13 gradient
 [ -2.4163289469e-07 -8.1218853865e-05 ] displacement14 gradient
 [ -2.4163289469e-07 -8.7838625262e-05 ] displacement15 gradient
 [ -2.4163289469e-07 -9.4458219024e-05 ] displacement16 gradient
 [ -2.4163289469e-07 -1.0107799042e-04 ] displacement17 gradient
 [ -2.4163289469e-07 -1.0769776182e-04 ] displacement18 gradient
 [ -2.4163289469e-07 -1.1431744440e-04 ] displacement19 gradient
 [ -2.4163289469e-07 -1.2093730462e-04 ] displacement20 gradient



    I     INITIAL X(I)       D(I)

    1     2.80000e+07        1.00
    2     0.00000            0.000121

   IT   NF     F       RELDF    PRELDF   RELDX   MODEL  STPPAR  D*STEP  NPRELDF

    0    1  0.609   

---------------------
Begin Evaluation    4
---------------------
Parameters for evaluation 4:
                      2.8000000909e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.4 results.out.4

Active response data for evaluation 4:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7856685260e-01 displacement01
                      5.1560692260e-01 displacement02
                      2.2376769260e-01 displacement03
                      3.6855891260e-01 displacement04
                      3.7933039260e-01 displacement05
                      1.8825158260e-01 displacement06
                      1.6041998260e-01 displacement07
                      2.7915265260e-01 displacement08
                      1.8275854260e-01 displacement09
                      3.7712675260e-01 displacement10
                      6.0826826008e-03 displacement11
                     -1.0186817399e-02 displacement12
                     -3.8714017399e-02 displacement13
                      2.2603902260e-01 displacement14
                      2.4296342601e-02 displacement15
                     -4.2672977399e-02 displacement16
                     -1.1668585740e-01 displacement17
                     -1.3906362740e-01 displacement18
                     -2.7662371740e-01 displacement19
                     -2.4515467399e-02 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation    5
---------------------
Parameters for evaluation 5:
                      2.8028000910e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.5 results.out.5

Active response data for evaluation 5:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7180113177e-01 displacement01
                      5.0884120177e-01 displacement02
                      2.1700197177e-01 displacement03
                      3.6179319177e-01 displacement04
                      3.7256467177e-01 displacement05
                      1.8148586177e-01 displacement06
                      1.5365426177e-01 displacement07
                      2.7238693177e-01 displacement08
                      1.7599282177e-01 displacement09
                      3.7036103177e-01 displacement10
                     -6.8303823092e-04 displacement11
                     -1.6952538231e-02 displacement12
                     -4.5479738231e-02 displacement13
                      2.1927330177e-01 displacement14
                      1.7530621769e-02 displacement15
                     -4.9438698231e-02 displacement16
                     -1.2345157823e-01 displacement17
                     -1.4582934823e-01 displacement18
                     -2.8338943823e-01 displacement19
                     -3.1281188231e-02 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation    6
---------------------
Parameters for evaluation 6:
                      2.8000000909e+07 E0
                     -1.0000000000e-05 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.6 results.out.6

Active response data for evaluation 6:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7856685255e-01 displacement01
                      5.1560692262e-01 displacement02
                      2.2376769268e-01 displacement03
                      3.6855891275e-01 displacement04
                      3.7933039282e-01 displacement05
                      1.8825158288e-01 displacement06
                      1.6041998295e-01 displacement07
                      2.7915265302e-01 displacement08
                      1.8275854308e-01 displacement09
                      3.7712675315e-01 displacement10
                      6.0826832144e-03 displacement11
                     -1.0186816719e-02 displacement12
                     -3.8714016653e-02 displacement13
                      2.2603902341e-01 displacement14
                      2.4296343479e-02 displacement15
                     -4.2672976455e-02 displacement16
                     -1.1668585639e-01 displacement17
                     -1.3906362632e-01 displacement18
                     -2.7662371626e-01 displacement19
                     -2.4515466190e-02 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.4163287900e-07  4.8374637629e-06 ] displacement01 gradient
 [ -2.4163287900e-07 -1.7821299991e-06 ] displacement02 gradient
 [ -2.4163287900e-07 -8.4020790325e-06 ] displacement03 gradient
 [ -2.4163287900e-07 -1.5021672795e-05 ] displacement04 gradient
 [ -2.4163287900e-07 -2.1641355374e-05 ] displacement05 gradient
 [ -2.4163287900e-07 -2.8261126772e-05 ] displacement06 gradient
 [ -2.4163287900e-07 -3.4880720534e-05 ] displacement07 gradient
 [ -2.4163287900e-07 -4.1500669568e-05 ] displacement08 gradient
 [ -2.4163287900e-07 -4.8120174512e-05 ] displacement09 gradient
 [ -2.4163287900e-07 -5.4740034727e-05 ] displacement10 gradient
 [ -2.4163287900e-07 -6.1359806125e-05 ] displacement11 gradient
 [ -2.4163287900e-07 -6.7979488705e-05 ] displacement12 gradient
 [ -2.4163287900e-07 -7.4599082467e-05 ] displacement13 gradient
 [ -2.4163287900e-07 -8.1218942682e-05 ] displacement14 gradient
 [ -2.4163287900e-07 -8.7838625262e-05 ] displacement15 gradient
 [ -2.4163287900e-07 -9.4458396660e-05 ] displacement16 gradient
 [ -2.4163287900e-07 -1.0107816806e-04 ] displacement17 gradient
 [ -2.4163287900e-07 -1.0769776182e-04 ] displacement18 gradient
 [ -2.4163287900e-07 -1.1431753322e-04 ] displacement19 gradient
 [ -2.4163287900e-07 -1.2093721580e-04 ] displacement20 gradient


    1    2  0.609      9.6e-07  9.6e-07  2.e-08    G    7.e-07  0.9     0.29   

---------------------
Begin Evaluation    7
---------------------
Parameters for evaluation 7:
                      2.8000004545e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.7 results.out.7

Active response data for evaluation 7:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7856597306e-01 displacement01
                      5.1560604306e-01 displacement02
                      2.2376681306e-01 displacement03
                      3.6855803306e-01 displacement04
                      3.7932951306e-01 displacement05
                      1.8825070306e-01 displacement06
                      1.6041910306e-01 displacement07
                      2.7915177306e-01 displacement08
                      1.8275766306e-01 displacement09
                      3.7712587306e-01 displacement10
                      6.0818030602e-03 displacement11
                     -1.0187696940e-02 displacement12
                     -3.8714896940e-02 displacement13
                      2.2603814306e-01 displacement14
                      2.4295463060e-02 displacement15
                     -4.2673856940e-02 displacement16
                     -1.1668673694e-01 displacement17
                     -1.3906450694e-01 displacement18
                     -2.7662459694e-01 displacement19
                     -2.4516346940e-02 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation    8
---------------------
Parameters for evaluation 8:
                      2.8028004550e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.8 results.out.8

Active response data for evaluation 8:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7180025311e-01 displacement01
                      5.0884032311e-01 displacement02
                      2.1700109311e-01 displacement03
                      3.6179231311e-01 displacement04
                      3.7256379311e-01 displacement05
                      1.8148498311e-01 displacement06
                      1.5365338311e-01 displacement07
                      2.7238605311e-01 displacement08
                      1.7599194311e-01 displacement09
                      3.7036015311e-01 displacement10
                     -6.8391689292e-04 displacement11
                     -1.6953416893e-02 displacement12
                     -4.5480616893e-02 displacement13
                      2.1927242311e-01 displacement14
                      1.7529743107e-02 displacement15
                     -4.9439576893e-02 displacement16
                     -1.2345245689e-01 displacement17
                     -1.4583022689e-01 displacement18
                     -2.8339031689e-01 displacement19
                     -3.1282066893e-02 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation    9
---------------------
Parameters for evaluation 9:
                      2.8000004545e+07 E0
                     -1.0000000000e-05 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.9 results.out.9

Active response data for evaluation 9:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7856597301e-01 displacement01
                      5.1560604308e-01 displacement02
                      2.2376681314e-01 displacement03
                      3.6855803321e-01 displacement04
                      3.7932951328e-01 displacement05
                      1.8825070334e-01 displacement06
                      1.6041910341e-01 displacement07
                      2.7915177348e-01 displacement08
                      1.8275766354e-01 displacement09
                      3.7712587361e-01 displacement10
                      6.0818036738e-03 displacement11
                     -1.0187696260e-02 displacement12
                     -3.8714896194e-02 displacement13
                      2.2603814387e-01 displacement14
                      2.4295463939e-02 displacement15
                     -4.2673855995e-02 displacement16
                     -1.1668673593e-01 displacement17
                     -1.3906450586e-01 displacement18
                     -2.7662459580e-01 displacement19
                     -2.4516345730e-02 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.4163281624e-07  4.8374637629e-06 ] displacement01 gradient
 [ -2.4163281624e-07 -1.7823076348e-06 ] displacement02 gradient
 [ -2.4163281624e-07 -8.4020790325e-06 ] displacement03 gradient
 [ -2.4163281624e-07 -1.5021761612e-05 ] displacement04 gradient
 [ -2.4163281624e-07 -2.1641355374e-05 ] displacement05 gradient
 [ -2.4163281624e-07 -2.8261215590e-05 ] displacement06 gradient
 [ -2.4163281624e-07 -3.4880898170e-05 ] displacement07 gradient
 [ -2.4163281624e-07 -4.1500669568e-05 ] displacement08 gradient
 [ -2.4163281624e-07 -4.8120352147e-05 ] displacement09 gradient
 [ -2.4163281624e-07 -5.4740034727e-05 ] displacement10 gradient
 [ -2.4163281624e-07 -6.1359717307e-05 ] displacement11 gradient
 [ -2.4163281624e-07 -6.7979488705e-05 ] displacement12 gradient
 [ -2.4163281624e-07 -7.4599171285e-05 ] displacement13 gradient
 [ -2.4163281624e-07 -8.1218853865e-05 ] displacement14 gradient
 [ -2.4163281624e-07 -8.7838802898e-05 ] displacement15 gradient
 [ -2.4163281624e-07 -9.4458396660e-05 ] displacement16 gradient
 [ -2.4163281624e-07 -1.0107807924e-04 ] displacement17 gradient
 [ -2.4163281624e-07 -1.0769767300e-04 ] displacement18 gradient
 [ -2.4163281624e-07 -1.1431744440e-04 ] displacement19 gradient
 [ -2.4163281624e-07 -1.2093739343e-04 ] displacement20 gradient


    2    3  0.609      3.8e-06  3.8e-06  6.e-08    G    2.e-07  4.      0.29   

---------------------
Begin Evaluation   10
---------------------
Parameters for evaluation 10:
                      2.8000019091e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.10 results.out.10

Active response data for evaluation 10:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7856245495e-01 displacement01
                      5.1560252495e-01 displacement02
                      2.2376329495e-01 displacement03
                      3.6855451495e-01 displacement04
                      3.7932599495e-01 displacement05
                      1.8824718495e-01 displacement06
                      1.6041558495e-01 displacement07
                      2.7914825495e-01 displacement08
                      1.8275414495e-01 displacement09
                      3.7712235495e-01 displacement10
                      6.0782849463e-03 displacement11
                     -1.0191215054e-02 displacement12
                     -3.8718415054e-02 displacement13
                      2.2603462495e-01 displacement14
                      2.4291944946e-02 displacement15
                     -4.2677375054e-02 displacement16
                     -1.1669025505e-01 displacement17
                     -1.3906802505e-01 displacement18
                     -2.7662811505e-01 displacement19
                     -2.4519865054e-02 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation   11
---------------------
Parameters for evaluation 11:
                      2.8028019110e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.11 results.out.11

Active response data for evaluation 11:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7179673851e-01 displacement01
                      5.0883680851e-01 displacement02
                      2.1699757851e-01 displacement03
                      3.6178879851e-01 displacement04
                      3.7256027851e-01 displacement05
                      1.8148146851e-01 displacement06
                      1.5364986851e-01 displacement07
                      2.7238253851e-01 displacement08
                      1.7598842851e-01 displacement09
                      3.7035663851e-01 displacement10
                     -6.8743149223e-04 displacement11
                     -1.6956931492e-02 displacement12
                     -4.5484131492e-02 displacement13
                      2.1926890851e-01 displacement14
                      1.7526228508e-02 displacement15
                     -4.9443091492e-02 displacement16
                     -1.2345597149e-01 displacement17
                     -1.4583374149e-01 displacement18
                     -2.8339383149e-01 displacement19
                     -3.1285581492e-02 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation   12
---------------------
Parameters for evaluation 12:
                      2.8000019091e+07 E0
                     -1.0000000000e-05 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.12 results.out.12

Active response data for evaluation 12:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7856245490e-01 displacement01
                      5.1560252496e-01 displacement02
                      2.2376329503e-01 displacement03
                      3.6855451510e-01 displacement04
                      3.7932599516e-01 displacement05
                      1.8824718523e-01 displacement06
                      1.6041558530e-01 displacement07
                      2.7914825536e-01 displacement08
                      1.8275414543e-01 displacement09
                      3.7712235549e-01 displacement10
                      6.0782855599e-03 displacement11
                     -1.0191214374e-02 displacement12
                     -3.8718414308e-02 displacement13
                      2.2603462576e-01 displacement14
                      2.4291945825e-02 displacement15
                     -4.2677374109e-02 displacement16
                     -1.1669025404e-01 displacement17
                     -1.3906802398e-01 displacement18
                     -2.7662811391e-01 displacement19
                     -2.4519863844e-02 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.4163256520e-07  4.8375525807e-06 ] displacement01 gradient
 [ -2.4163256520e-07 -1.7821299991e-06 ] displacement02 gradient
 [ -2.4163256520e-07 -8.4019902147e-06 ] displacement03 gradient
 [ -2.4163256520e-07 -1.5021761612e-05 ] displacement04 gradient
 [ -2.4163256520e-07 -2.1641444192e-05 ] displacement05 gradient
 [ -2.4163256520e-07 -2.8261215590e-05 ] displacement06 gradient
 [ -2.4163256520e-07 -3.4880720534e-05 ] displacement07 gradient
 [ -2.4163256520e-07 -4.1500491932e-05 ] displacement08 gradient
 [ -2.4163256520e-07 -4.8120085694e-05 ] displacement09 gradient
 [ -2.4163256520e-07 -5.4739857092e-05 ] displacement10 gradient
 [ -2.4163256520e-07 -6.1359539671e-05 ] displacement11 gradient
 [ -2.4163256520e-07 -6.7979399887e-05 ] displacement12 gradient
 [ -2.4163256520e-07 -7.4599082467e-05 ] displacement13 gradient
 [ -2.4163256520e-07 -8.1218676229e-05 ] displacement14 gradient
 [ -2.4163256520e-07 -8.7838447627e-05 ] displacement15 gradient
 [ -2.4163256520e-07 -9.4458219024e-05 ] displacement16 gradient
 [ -2.4163256520e-07 -1.0107790160e-04 ] displacement17 gradient
 [ -2.4163256520e-07 -1.0769776182e-04 ] displacement18 gradient
 [ -2.4163256520e-07 -1.1431744440e-04 ] displacement19 gradient
 [ -2.4163256520e-07 -1.2093703816e-04 ] displacement20 gradient


    3    4  0.609      1.5e-05  1.5e-05  3.e-07    G    4.e-08  1.e+01  0.29   

---------------------
Begin Evaluation   13
---------------------
Parameters for evaluation 13:
                      2.8000077268e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.13 results.out.13

Active response data for evaluation 13:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7854838327e-01 displacement01
                      5.1558845327e-01 displacement02
                      2.2374922327e-01 displacement03
                      3.6854044327e-01 displacement04
                      3.7931192327e-01 displacement05
                      1.8823311327e-01 displacement06
                      1.6040151327e-01 displacement07
                      2.7913418327e-01 displacement08
                      1.8274007327e-01 displacement09
                      3.7710828327e-01 displacement10
                      6.0642132705e-03 displacement11
                     -1.0205286729e-02 displacement12
                     -3.8732486729e-02 displacement13
                      2.2602055327e-01 displacement14
                      2.4277873271e-02 displacement15
                     -4.2691446729e-02 displacement16
                     -1.1670432673e-01 displacement17
                     -1.3908209673e-01 displacement18
                     -2.7664218673e-01 displacement19
                     -2.4533936729e-02 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation   14
---------------------
Parameters for evaluation 14:
                      2.8028077346e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.14 results.out.14

Active response data for evaluation 14:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7178268089e-01 displacement01
                      5.0882275089e-01 displacement02
                      2.1698352089e-01 displacement03
                      3.6177474089e-01 displacement04
                      3.7254622089e-01 displacement05
                      1.8146741089e-01 displacement06
                      1.5363581089e-01 displacement07
                      2.7236848089e-01 displacement08
                      1.7597437089e-01 displacement09
                      3.7034258089e-01 displacement10
                     -7.0148911038e-04 displacement11
                     -1.6970989110e-02 displacement12
                     -4.5498189110e-02 displacement13
                      2.1925485089e-01 displacement14
                      1.7512170890e-02 displacement15
                     -4.9457149110e-02 displacement16
                     -1.2347002911e-01 displacement17
                     -1.4584779911e-01 displacement18
                     -2.8340788911e-01 displacement19
                     -3.1299639110e-02 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation   15
---------------------
Parameters for evaluation 15:
                      2.8000077268e+07 E0
                     -1.0000000000e-05 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.15 results.out.15

Active response data for evaluation 15:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7854838322e-01 displacement01
                      5.1558845329e-01 displacement02
                      2.2374922335e-01 displacement03
                      3.6854044342e-01 displacement04
                      3.7931192349e-01 displacement05
                      1.8823311355e-01 displacement06
                      1.6040151362e-01 displacement07
                      2.7913418369e-01 displacement08
                      1.8274007375e-01 displacement09
                      3.7710828382e-01 displacement10
                      6.0642138841e-03 displacement11
                     -1.0205286050e-02 displacement12
                     -3.8732485984e-02 displacement13
                      2.2602055408e-01 displacement14
                      2.4277874149e-02 displacement15
                     -4.2691445785e-02 displacement16
                     -1.1670432572e-01 displacement17
                     -1.3908209565e-01 displacement18
                     -2.7664218559e-01 displacement19
                     -2.4533935520e-02 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.4163156109e-07  4.8373749451e-06 ] displacement01 gradient
 [ -2.4163156109e-07 -1.7822188170e-06 ] displacement02 gradient
 [ -2.4163156109e-07 -8.4019013968e-06 ] displacement03 gradient
 [ -2.4163156109e-07 -1.5021672795e-05 ] displacement04 gradient
 [ -2.4163156109e-07 -2.1641177739e-05 ] displacement05 gradient
 [ -2.4163156109e-07 -2.8260949136e-05 ] displacement06 gradient
 [ -2.4163156109e-07 -3.4880631716e-05 ] displacement07 gradient
 [ -2.4163156109e-07 -4.1500314296e-05 ] displacement08 gradient
 [ -2.4163156109e-07 -4.8119996876e-05 ] displacement09 gradient
 [ -2.4163156109e-07 -5.4739768274e-05 ] displacement10 gradient
 [ -2.4163156109e-07 -6.1359273218e-05 ] displacement11 gradient
 [ -2.4163156109e-07 -6.7979044616e-05 ] displacement12 gradient
 [ -2.4163156109e-07 -7.4598816013e-05 ] displacement13 gradient
 [ -2.4163156109e-07 -8.1218498593e-05 ] displacement14 gradient
 [ -2.4163156109e-07 -8.7838269991e-05 ] displacement15 gradient
 [ -2.4163156109e-07 -9.4457863753e-05 ] displacement16 gradient
 [ -2.4163156109e-07 -1.0107754633e-04 ] displacement17 gradient
 [ -2.4163156109e-07 -1.0769714009e-04 ] displacement18 gradient
 [ -2.4163156109e-07 -1.1431708913e-04 ] displacement19 gradient
 [ -2.4163156109e-07 -1.2093659407e-04 ] displacement20 gradient


    4    5  0.609      6.1e-05  6.1e-05  1.e-06    G    1.e-08  6.e+01  0.29   

---------------------
Begin Evaluation   16
---------------------
Parameters for evaluation 16:
                      2.8000309930e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.16 results.out.16

Active response data for evaluation 16:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7849210904e-01 displacement01
                      5.1553217904e-01 displacement02
                      2.2369294904e-01 displacement03
                      3.6848416904e-01 displacement04
                      3.7925564904e-01 displacement05
                      1.8817683904e-01 displacement06
                      1.6034523904e-01 displacement07
                      2.7907790904e-01 displacement08
                      1.8268379904e-01 displacement09
                      3.7705200904e-01 displacement10
                      6.0079390417e-03 displacement11
                     -1.0261560958e-02 displacement12
                     -3.8788760958e-02 displacement13
                      2.2596427904e-01 displacement14
                      2.4221599042e-02 displacement15
                     -4.2747720958e-02 displacement16
                     -1.1676060096e-01 displacement17
                     -1.3913837096e-01 displacement18
                     -2.7669846096e-01 displacement19
                     -2.4590210958e-02 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation   17
---------------------
Parameters for evaluation 17:
                      2.8028310240e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.17 results.out.17

Active response data for evaluation 17:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7172646288e-01 displacement01
                      5.0876653288e-01 displacement02
                      2.1692730288e-01 displacement03
                      3.6171852288e-01 displacement04
                      3.7249000288e-01 displacement05
                      1.8141119288e-01 displacement06
                      1.5357959288e-01 displacement07
                      2.7231226288e-01 displacement08
                      1.7591815288e-01 displacement09
                      3.7028636288e-01 displacement10
                     -7.5770712117e-04 displacement11
                     -1.7027207121e-02 displacement12
                     -4.5554407121e-02 displacement13
                      2.1919863288e-01 displacement14
                      1.7455952879e-02 displacement15
                     -4.9513367121e-02 displacement16
                     -1.2352624712e-01 displacement17
                     -1.4590401712e-01 displacement18
                     -2.8346410712e-01 displacement19
                     -3.1355857121e-02 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation   18
---------------------
Parameters for evaluation 18:
                      2.8000309930e+07 E0
                     -1.0000000000e-05 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.18 results.out.18

Active response data for evaluation 18:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7849210899e-01 displacement01
                      5.1553217906e-01 displacement02
                      2.2369294913e-01 displacement03
                      3.6848416919e-01 displacement04
                      3.7925564926e-01 displacement05
                      1.8817683932e-01 displacement06
                      1.6034523939e-01 displacement07
                      2.7907790946e-01 displacement08
                      1.8268379952e-01 displacement09
                      3.7705200959e-01 displacement10
                      6.0079396553e-03 displacement11
                     -1.0261560279e-02 displacement12
                     -3.8788760212e-02 displacement13
                      2.2596427985e-01 displacement14
                      2.4221599920e-02 displacement15
                     -4.2747720014e-02 displacement16
                     -1.1676059995e-01 displacement17
                     -1.3913836988e-01 displacement18
                     -2.7669845982e-01 displacement19
                     -2.4590209749e-02 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.4162754554e-07  4.8374637629e-06 ] displacement01 gradient
 [ -2.4162754554e-07 -1.7818635456e-06 ] displacement02 gradient
 [ -2.4162754554e-07 -8.4016349433e-06 ] displacement03 gradient
 [ -2.4162754554e-07 -1.5021317523e-05 ] displacement04 gradient
 [ -2.4162754554e-07 -2.1640822467e-05 ] displacement05 gradient
 [ -2.4162754554e-07 -2.8260327412e-05 ] displacement06 gradient
 [ -2.4162754554e-07 -3.4879832356e-05 ] displacement07 gradient
 [ -2.4162754554e-07 -4.1499514936e-05 ] displacement08 gradient
 [ -2.4162754554e-07 -4.8119197515e-05 ] displacement09 gradient
 [ -2.4162754554e-07 -5.4738702460e-05 ] displacement10 gradient
 [ -2.4162754554e-07 -6.1358296222e-05 ] displacement11 gradient
 [ -2.4162754554e-07 -6.7977978802e-05 ] displacement12 gradient
 [ -2.4162754554e-07 -7.4597394928e-05 ] displacement13 gradient
 [ -2.4162754554e-07 -8.1216988690e-05 ] displacement14 gradient
 [ -2.4162754554e-07 -8.7836671270e-05 ] displacement15 gradient
 [ -2.4162754554e-07 -9.4456176214e-05 ] displacement16 gradient
 [ -2.4162754554e-07 -1.0107576998e-04 ] displacement17 gradient
 [ -2.4162754554e-07 -1.0769536374e-04 ] displacement18 gradient
 [ -2.4162754554e-07 -1.1431495750e-04 ] displacement19 gradient
 [ -2.4162754554e-07 -1.2093446244e-04 ] displacement20 gradient


    5    6  0.609      0.00025  0.00025  4.e-06    G    3.e-09  2.e+02  0.29   

---------------------
Begin Evaluation   19
---------------------
Parameters for evaluation 19:
                      2.8001239793e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.19 results.out.19

Active response data for evaluation 19:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7826721151e-01 displacement01
                      5.1530728151e-01 displacement02
                      2.2346805151e-01 displacement03
                      3.6825927151e-01 displacement04
                      3.7903075151e-01 displacement05
                      1.8795194151e-01 displacement06
                      1.6012034151e-01 displacement07
                      2.7885301151e-01 displacement08
                      1.8245890151e-01 displacement09
                      3.7682711151e-01 displacement10
                      5.7830415144e-03 displacement11
                     -1.0486458486e-02 displacement12
                     -3.9013658486e-02 displacement13
                      2.2573938151e-01 displacement14
                      2.3996701514e-02 displacement15
                     -4.2972618486e-02 displacement16
                     -1.1698549849e-01 displacement17
                     -1.3936326849e-01 displacement18
                     -2.7692335849e-01 displacement19
                     -2.4815108486e-02 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation   20
---------------------
Parameters for evaluation 20:
                      2.8029241032e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.20 results.out.20

Active response data for evaluation 20:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7150179002e-01 displacement01
                      5.0854186002e-01 displacement02
                      2.1670263002e-01 displacement03
                      3.6149385002e-01 displacement04
                      3.7226533002e-01 displacement05
                      1.8118652002e-01 displacement06
                      1.5335492002e-01 displacement07
                      2.7208759002e-01 displacement08
                      1.7569348002e-01 displacement09
                      3.7006169002e-01 displacement10
                     -9.8237997558e-04 displacement11
                     -1.7251879976e-02 displacement12
                     -4.5779079976e-02 displacement13
                      2.1897396002e-01 displacement14
                      1.7231280024e-02 displacement15
                     -4.9738039976e-02 displacement16
                     -1.2375091998e-01 displacement17
                     -1.4612868998e-01 displacement18
                     -2.8368877998e-01 displacement19
                     -3.1580529976e-02 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation   21
---------------------
Parameters for evaluation 21:
                      2.8001239793e+07 E0
                     -1.0000000000e-05 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.21 results.out.21

Active response data for evaluation 21:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7826721147e-01 displacement01
                      5.1530728153e-01 displacement02
                      2.2346805160e-01 displacement03
                      3.6825927166e-01 displacement04
                      3.7903075173e-01 displacement05
                      1.8795194180e-01 displacement06
                      1.6012034186e-01 displacement07
                      2.7885301193e-01 displacement08
                      1.8245890200e-01 displacement09
                      3.7682711206e-01 displacement10
                      5.7830421280e-03 displacement11
                     -1.0486457806e-02 displacement12
                     -3.9013657740e-02 displacement13
                      2.2573938233e-01 displacement14
                      2.3996702393e-02 displacement15
                     -4.2972617541e-02 displacement16
                     -1.1698549747e-01 displacement17
                     -1.3936326741e-01 displacement18
                     -2.7692335734e-01 displacement19
                     -2.4815107276e-02 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.4161149792e-07  4.8371084915e-06 ] displacement01 gradient
 [ -2.4161149792e-07 -1.7818635456e-06 ] displacement02 gradient
 [ -2.4161149792e-07 -8.4011908541e-06 ] displacement03 gradient
 [ -2.4161149792e-07 -1.5020429345e-05 ] displacement04 gradient
 [ -2.4161149792e-07 -2.1639490200e-05 ] displacement05 gradient
 [ -2.4161149792e-07 -2.8258639873e-05 ] displacement06 gradient
 [ -2.4161149792e-07 -3.4877611910e-05 ] displacement07 gradient
 [ -2.4161149792e-07 -4.1496761582e-05 ] displacement08 gradient
 [ -2.4161149792e-07 -4.8115911255e-05 ] displacement09 gradient
 [ -2.4161149792e-07 -5.4735060928e-05 ] displacement10 gradient
 [ -2.4161149792e-07 -6.1354210601e-05 ] displacement11 gradient
 [ -2.4161149792e-07 -6.7973360274e-05 ] displacement12 gradient
 [ -2.4161149792e-07 -7.4592509947e-05 ] displacement13 gradient
 [ -2.4161149792e-07 -8.1211659619e-05 ] displacement14 gradient
 [ -2.4161149792e-07 -8.7830809292e-05 ] displacement15 gradient
 [ -2.4161149792e-07 -9.4449870147e-05 ] displacement16 gradient
 [ -2.4161149792e-07 -1.0106910864e-04 ] displacement17 gradient
 [ -2.4161149792e-07 -1.0768816949e-04 ] displacement18 gradient
 [ -2.4161149792e-07 -1.1430740798e-04 ] displacement19 gradient
 [ -2.4161149792e-07 -1.2092655766e-04 ] displacement20 gradient


    6    7  0.609      0.00098  0.00098  2.e-05    G    7.e-10  9.e+02  0.29   

---------------------
Begin Evaluation   22
---------------------
Parameters for evaluation 22:
                      2.8004946718e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.22 results.out.22

Active response data for evaluation 22:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7737079879e-01 displacement01
                      5.1441086879e-01 displacement02
                      2.2257163879e-01 displacement03
                      3.6736285879e-01 displacement04
                      3.7813433879e-01 displacement05
                      1.8705552879e-01 displacement06
                      1.5922392879e-01 displacement07
                      2.7795659879e-01 displacement08
                      1.8156248879e-01 displacement09
                      3.7593069879e-01 displacement10
                      4.8866287938e-03 displacement11
                     -1.1382871206e-02 displacement12
                     -3.9910071206e-02 displacement13
                      2.2484296879e-01 displacement14
                      2.3100288794e-02 displacement15
                     -4.3869031206e-02 displacement16
                     -1.1788191121e-01 displacement17
                     -1.4025968121e-01 displacement18
                     -2.7781977121e-01 displacement19
                     -2.5711521206e-02 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation   23
---------------------
Parameters for evaluation 23:
                      2.8032951665e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.23 results.out.23

Active response data for evaluation 23:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7060627282e-01 displacement01
                      5.0764634282e-01 displacement02
                      2.1580711282e-01 displacement03
                      3.6059833282e-01 displacement04
                      3.7136981282e-01 displacement05
                      1.8029100282e-01 displacement06
                      1.5245940282e-01 displacement07
                      2.7119207282e-01 displacement08
                      1.7479796282e-01 displacement09
                      3.6916617282e-01 displacement10
                     -1.8778971791e-03 displacement11
                     -1.8147397179e-02 displacement12
                     -4.6674597179e-02 displacement13
                      2.1807844282e-01 displacement14
                      1.6335762821e-02 displacement15
                     -5.0633557179e-02 displacement16
                     -1.2464643718e-01 displacement17
                     -1.4702420718e-01 displacement18
                     -2.8458429718e-01 displacement19
                     -3.2476047179e-02 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation   24
---------------------
Parameters for evaluation 24:
                      2.8004946718e+07 E0
                     -1.0000000000e-05 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.24 results.out.24

Active response data for evaluation 24:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7737079875e-01 displacement01
                      5.1441086881e-01 displacement02
                      2.2257163888e-01 displacement03
                      3.6736285894e-01 displacement04
                      3.7813433901e-01 displacement05
                      1.8705552908e-01 displacement06
                      1.5922392914e-01 displacement07
                      2.7795659921e-01 displacement08
                      1.8156248927e-01 displacement09
                      3.7593069934e-01 displacement10
                      4.8866294071e-03 displacement11
                     -1.1382870527e-02 displacement12
                     -3.9910070461e-02 displacement13
                      2.2484296961e-01 displacement14
                      2.3100289672e-02 displacement15
                     -4.3869030262e-02 displacement16
                     -1.1788191020e-01 displacement17
                     -1.4025968013e-01 displacement18
                     -2.7781977006e-01 displacement19
                     -2.5711519997e-02 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.4154753948e-07  4.8358650417e-06 ] displacement01 gradient
 [ -2.4154753948e-07 -1.7814194564e-06 ] displacement02 gradient
 [ -2.4154753948e-07 -8.3989704081e-06 ] displacement03 gradient
 [ -2.4154753948e-07 -1.5016521360e-05 ] displacement04 gradient
 [ -2.4154753948e-07 -2.1633805858e-05 ] displacement05 gradient
 [ -2.4154753948e-07 -2.8251090356e-05 ] displacement06 gradient
 [ -2.4154753948e-07 -3.4868374854e-05 ] displacement07 gradient
 [ -2.4154753948e-07 -4.1485836988e-05 ] displacement08 gradient
 [ -2.4154753948e-07 -4.8103121486e-05 ] displacement09 gradient
 [ -2.4154753948e-07 -5.4720672438e-05 ] displacement10 gradient
 [ -2.4154753948e-07 -6.1337956936e-05 ] displacement11 gradient
 [ -2.4154753948e-07 -6.7955419070e-05 ] displacement12 gradient
 [ -2.4154753948e-07 -7.4572792386e-05 ] displacement13 gradient
 [ -2.4154753948e-07 -8.1190076884e-05 ] displacement14 gradient
 [ -2.4154753948e-07 -8.7807539018e-05 ] displacement15 gradient
 [ -2.4154753948e-07 -9.4424912334e-05 ] displacement16 gradient
 [ -2.4154753948e-07 -1.0104228565e-04 ] displacement17 gradient
 [ -2.4154753948e-07 -1.0765983660e-04 ] displacement18 gradient
 [ -2.4154753948e-07 -1.1427720992e-04 ] displacement19 gradient
 [ -2.4154753948e-07 -1.2089449442e-04 ] displacement20 gradient


    7    8  0.606      0.0039   0.0039   7.e-05    G    2.e-10  4.e+03  0.29   

---------------------
Begin Evaluation   25
---------------------
Parameters for evaluation 25:
                      2.8019577118e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.25 results.out.25

Active response data for evaluation 25:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7383517472e-01 displacement01
                      5.1087524472e-01 displacement02
                      2.1903601472e-01 displacement03
                      3.6382723472e-01 displacement04
                      3.7459871472e-01 displacement05
                      1.8351990472e-01 displacement06
                      1.5568830472e-01 displacement07
                      2.7442097472e-01 displacement08
                      1.7802686472e-01 displacement09
                      3.7239507472e-01 displacement10
                      1.3510047214e-03 displacement11
                     -1.4918495279e-02 displacement12
                     -4.3445695279e-02 displacement13
                      2.2130734472e-01 displacement14
                      1.9564664721e-02 displacement15
                     -4.7404655279e-02 displacement16
                     -1.2141753528e-01 displacement17
                     -1.4379530528e-01 displacement18
                     -2.8135539528e-01 displacement19
                     -2.9247145279e-02 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation   26
---------------------
Parameters for evaluation 26:
                      2.8047596695e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.26 results.out.26

Active response data for evaluation 26:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.6707418084e-01 displacement01
                      5.0411425084e-01 displacement02
                      2.1227502084e-01 displacement03
                      3.5706624084e-01 displacement04
                      3.6783772084e-01 displacement05
                      1.7675891084e-01 displacement06
                      1.4892731084e-01 displacement07
                      2.6765998084e-01 displacement08
                      1.7126587084e-01 displacement09
                      3.6563408084e-01 displacement10
                     -5.4099891594e-03 displacement11
                     -2.1679489159e-02 displacement12
                     -5.0206689159e-02 displacement13
                      2.1454635084e-01 displacement14
                      1.2803670841e-02 displacement15
                     -5.4165649159e-02 displacement16
                     -1.2817852916e-01 displacement17
                     -1.5055629916e-01 displacement18
                     -2.8811638916e-01 displacement19
                     -3.6008139159e-02 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation   27
---------------------
Parameters for evaluation 27:
                      2.8019577118e+07 E0
                     -1.0000000000e-05 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.27 results.out.27

Active response data for evaluation 27:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.7383517467e-01 displacement01
                      5.1087524474e-01 displacement02
                      2.1903601481e-01 displacement03
                      3.6382723487e-01 displacement04
                      3.7459871494e-01 displacement05
                      1.8351990500e-01 displacement06
                      1.5568830507e-01 displacement07
                      2.7442097514e-01 displacement08
                      1.7802686520e-01 displacement09
                      3.7239507527e-01 displacement10
                      1.3510053342e-03 displacement11
                     -1.4918494600e-02 displacement12
                     -4.3445694534e-02 displacement13
                      2.2130734553e-01 displacement14
                      1.9564665599e-02 displacement15
                     -4.7404654335e-02 displacement16
                     -1.2141753427e-01 displacement17
                     -1.4379530420e-01 displacement18
                     -2.8135539414e-01 displacement19
                     -2.9247144071e-02 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.4129535761e-07  4.8307136069e-06 ] displacement01 gradient
 [ -2.4129535761e-07 -1.7797319174e-06 ] displacement02 gradient
 [ -2.4129535761e-07 -8.3901774417e-06 ] displacement03 gradient
 [ -2.4129535761e-07 -1.5000711784e-05 ] displacement04 gradient
 [ -2.4129535761e-07 -2.1611157308e-05 ] displacement05 gradient
 [ -2.4129535761e-07 -2.8221780468e-05 ] displacement06 gradient
 [ -2.4129535761e-07 -3.4832137175e-05 ] displacement07 gradient
 [ -2.4129535761e-07 -4.1442671517e-05 ] displacement08 gradient
 [ -2.4129535761e-07 -4.8053028223e-05 ] displacement09 gradient
 [ -2.4129535761e-07 -5.4663473747e-05 ] displacement10 gradient
 [ -2.4129535761e-07 -6.1273830454e-05 ] displacement11 gradient
 [ -2.4129535761e-07 -6.7884453614e-05 ] displacement12 gradient
 [ -2.4129535761e-07 -7.4494899138e-05 ] displacement13 gradient
 [ -2.4129535761e-07 -8.1105522298e-05 ] displacement14 gradient
 [ -2.4129535761e-07 -8.7715879005e-05 ] displacement15 gradient
 [ -2.4129535761e-07 -9.4326324529e-05 ] displacement16 gradient
 [ -2.4129535761e-07 -1.0093677005e-04 ] displacement17 gradient
 [ -2.4129535761e-07 -1.0754721558e-04 ] displacement18 gradient
 [ -2.4129535761e-07 -1.1415783874e-04 ] displacement19 gradient
 [ -2.4129535761e-07 -1.2076819544e-04 ] displacement20 gradient


    8    9  0.597      0.015    0.015    0.0003    G    4.e-11  1.e+04  0.29   

---------------------
Begin Evaluation   28
---------------------
Parameters for evaluation 28:
                      2.8075131557e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.28 results.out.28

Active response data for evaluation 28:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.6044329364e-01 displacement01
                      4.9748336364e-01 displacement02
                      2.0564413364e-01 displacement03
                      3.5043535364e-01 displacement04
                      3.6120683364e-01 displacement05
                      1.7012802364e-01 displacement06
                      1.4229642364e-01 displacement07
                      2.6102909364e-01 displacement08
                      1.6463498364e-01 displacement09
                      3.5900319364e-01 displacement10
                     -1.2040876355e-02 displacement11
                     -2.8310376355e-02 displacement12
                     -5.6837576355e-02 displacement13
                      2.0791546364e-01 displacement14
                      6.1727836447e-03 displacement15
                     -6.0796536355e-02 displacement16
                     -1.3480941636e-01 displacement17
                     -1.5718718636e-01 displacement18
                     -2.9474727636e-01 displacement19
                     -4.2639026355e-02 displacement20



---------------------
Begin Evaluation   29
---------------------
Parameters for evaluation 29:
                      2.8104130592e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.29 results.out.29

Active response data for evaluation 29:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.5347385508e-01 displacement01
                      4.9051392508e-01 displacement02
                      1.9867469508e-01 displacement03
                      3.4346591508e-01 displacement04
                      3.5423739508e-01 displacement05
                      1.6315858508e-01 displacement06
                      1.3532698508e-01 displacement07
                      2.5405965508e-01 displacement08
                      1.5766554508e-01 displacement09
                      3.5203375508e-01 displacement10
                     -1.9010314916e-02 displacement11
                     -3.5279814916e-02 displacement12
                     -6.3807014916e-02 displacement13
                      2.0094602508e-01 displacement14
                     -7.9665491559e-04 displacement15
                     -6.7765974916e-02 displacement16
                     -1.4177885492e-01 displacement17
                     -1.6415662492e-01 displacement18
                     -3.0171671492e-01 displacement19
                     -4.9608464916e-02 displacement20



---------------------
Begin Evaluation   30
---------------------
Parameters for evaluation 30:
                      2.8143017002e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.30 results.out.30

Active response data for evaluation 30:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      3.4415069303e-01 displacement01
                      4.8119076303e-01 displacement02
                      1.8935153303e-01 displacement03
                      3.3414275303e-01 displacement04
                      3.4491423303e-01 displacement05
                      1.5383542303e-01 displacement06
                      1.2600382303e-01 displacement07
                      2.4473649303e-01 displacement08
                      1.4834238303e-01 displacement09
                      3.4271059303e-01 displacement10
                     -2.8333476974e-02 displacement11
                     -4.4602976974e-02 displacement12
                     -7.3130176974e-02 displacement13
                      1.9162286303e-01 displacement14
                     -1.0119816974e-02 displacement15
                     -7.7089136974e-02 displacement16
                     -1.5110201697e-01 displacement17
                     -1.7347978697e-01 displacement18
                     -3.1103987697e-01 displacement19
                     -5.8931626974e-02 displacement20



---------------------
Begin Evaluation   31
---------------------
Parameters for evaluation 31:
                      2.8551469302e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.31 results.out.31

Active response data for evaluation 31:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      2.4775704255e-01 displacement01
                      3.8479711255e-01 displacement02
                      9.2957882551e-02 displacement03
                      2.3774910255e-01 displacement04
                      2.4852058255e-01 displacement05
                      5.7441772551e-02 displacement06
                      2.9610172551e-02 displacement07
                      1.4834284255e-01 displacement08
                      5.1948732551e-02 displacement09
                      2.4631694255e-01 displacement10
                     -1.2472712745e-01 displacement11
                     -1.4099662745e-01 displacement12
                     -1.6952382745e-01 displacement13
                      9.5229212551e-02 displacement14
                     -1.0651346745e-01 displacement15
                     -1.7348278745e-01 displacement16
                     -2.4749566745e-01 displacement17
                     -2.6987343745e-01 displacement18
                     -4.0743352745e-01 displacement19
                     -1.5532527745e-01 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation   32
---------------------
Parameters for evaluation 32:
                      2.8580020771e+07 E0
                      0.0000000000e+00 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.32 results.out.32

Active response data for evaluation 32:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      2.4112200085e-01 displacement01
                      3.7816207085e-01 displacement02
                      8.6322840850e-02 displacement03
                      2.3111406085e-01 displacement04
                      2.4188554085e-01 displacement05
                      5.0806730850e-02 displacement06
                      2.2975130850e-02 displacement07
                      1.4170780085e-01 displacement08
                      4.5313690850e-02 displacement09
                      2.3968190085e-01 displacement10
                     -1.3136216915e-01 displacement11
                     -1.4763166915e-01 displacement12
                     -1.7615886915e-01 displacement13
                      8.8594170850e-02 displacement14
                     -1.1314850915e-01 displacement15
                     -1.8011782915e-01 displacement16
                     -2.5413070915e-01 displacement17
                     -2.7650847915e-01 displacement18
                     -4.1406856915e-01 displacement19
                     -1.6196031915e-01 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation   33
---------------------
Parameters for evaluation 33:
                      2.8551469302e+07 E0
                     -1.0000000000e-05 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.33 results.out.33

Active response data for evaluation 33:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                      2.4775704250e-01 displacement01
                      3.8479711257e-01 displacement02
                      9.2957882632e-02 displacement03
                      2.3774910270e-01 displacement04
                      2.4852058276e-01 displacement05
                      5.7441772823e-02 displacement06
                      2.9610172887e-02 displacement07
                      1.4834284295e-01 displacement08
                      5.1948733014e-02 displacement09
                      2.4631694308e-01 displacement10
                     -1.2472712686e-01 displacement11
                     -1.4099662680e-01 displacement12
                     -1.6952382673e-01 displacement13
                      9.5229213332e-02 displacement14
                     -1.0651346660e-01 displacement15
                     -1.7348278654e-01 displacement16
                     -2.4749566648e-01 displacement17
                     -2.6987343641e-01 displacement18
                     -4.0743352635e-01 displacement19
                     -1.5532527629e-01 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.3238880040e-07  4.6522785624e-06 ] displacement01 gradient
 [ -2.3238880040e-07 -1.7140955322e-06 ] displacement02 gradient
 [ -2.3238880040e-07 -8.0805584446e-06 ] displacement03 gradient
 [ -2.3238880040e-07 -1.4447110175e-05 ] displacement04 gradient
 [ -2.3238880040e-07 -2.0813484269e-05 ] displacement05 gradient
 [ -2.3238880040e-07 -2.7180036000e-05 ] displacement06 gradient
 [ -2.3238880040e-07 -3.3546410094e-05 ] displacement07 gradient
 [ -2.3238880040e-07 -3.9913050642e-05 ] displacement08 gradient
 [ -2.3238880040e-07 -4.6279424737e-05 ] displacement09 gradient
 [ -2.3238880040e-07 -5.2645887649e-05 ] displacement10 gradient
 [ -2.3238880040e-07 -5.9012350562e-05 ] displacement11 gradient
 [ -2.3238880040e-07 -6.5378813474e-05 ] displacement12 gradient
 [ -2.3238880040e-07 -7.1745187569e-05 ] displacement13 gradient
 [ -2.3238880040e-07 -7.8111739299e-05 ] displacement14 gradient
 [ -2.3238880040e-07 -8.4478202211e-05 ] displacement15 gradient
 [ -2.3238880040e-07 -9.0844665124e-05 ] displacement16 gradient
 [ -2.3238880040e-07 -9.7211216854e-05 ] displacement17 gradient
 [ -2.3238880040e-07 -1.0357767977e-04 ] displacement18 gradient
 [ -2.3238880040e-07 -1.0994414268e-04 ] displacement19 gradient
 [ -2.3238880040e-07 -1.1631051677e-04 ] displacement20 gradient


    9   13  0.432      0.28     0.28     0.009     G    0.      5.e+05  0.28   

---------------------
Begin Evaluation   34
---------------------
Parameters for evaluation 34:
                      2.9615253670e+07 E0
                     -4.5273417542e+03 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.34 results.out.34

Active response data for evaluation 34:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                     -1.0330420938e-02 displacement01
                      1.5344783737e-01 displacement02
                     -1.1142827198e-01 displacement03
                      6.0553851331e-02 displacement04
                      9.8746915996e-02 displacement05
                     -6.4676679913e-02 displacement06
                     -6.4616437870e-02 displacement07
                      8.2247752185e-02 displacement08
                      1.4227942956e-02 displacement09
                      2.3721639093e-01 displacement10
                     -1.0495829244e-01 displacement11
                     -9.2105989544e-02 displacement12
                     -9.1255645398e-02 displacement13
                      2.0313406366e-01 displacement14
                      3.1290621224e-02 displacement15
                     -5.5133877946e-03 displacement16
                     -4.9091315845e-02 displacement17
                     -4.0760861305e-02 displacement18
                     -1.4733575704e-01 displacement19
                      1.3603842106e-01 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation   35
---------------------
Parameters for evaluation 35:
                      2.9644868924e+07 E0
                     -4.5273417542e+03 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.35 results.out.35

Active response data for evaluation 35:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                     -1.6688213859e-02 displacement01
                      1.4703669937e-01 displacement02
                     -1.1789342927e-01 displacement03
                      5.4033989132e-02 displacement04
                      9.2171651606e-02 displacement05
                     -7.1308055673e-02 displacement06
                     -7.1304646333e-02 displacement07
                      7.5501977267e-02 displacement08
                      7.4238551472e-03 displacement09
                      2.3035323084e-01 displacement10
                     -1.1188129746e-01 displacement11
                     -9.9089625673e-02 displacement12
                     -9.8300712635e-02 displacement13
                      1.9602675117e-01 displacement14
                      2.4120234896e-02 displacement15
                     -1.2747691329e-02 displacement16
                     -5.6390395052e-02 displacement17
                     -4.8125590095e-02 displacement18
                     -1.5476702512e-01 displacement19
                      1.2853970786e-01 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation   36
---------------------
Parameters for evaluation 36:
                      2.9615253670e+07 E0
                     -4.5318690960e+03 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.36 results.out.36

Active response data for evaluation 36:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                     -1.0349878822e-02 displacement01
                      1.5345506627e-01 displacement02
                     -1.1139390543e-01 displacement03
                      6.0615814988e-02 displacement04
                      9.8836945007e-02 displacement05
                     -6.4558108308e-02 displacement06
                     -6.4468837232e-02 displacement07
                      8.2424877701e-02 displacement08
                      1.4435098824e-02 displacement09
                      2.3745409247e-01 displacement10
                     -1.0468951982e-01 displacement11
                     -9.1805610153e-02 displacement12
                     -9.0923112961e-02 displacement13
                      2.0349930620e-01 displacement14
                      3.1689142007e-02 displacement15
                     -5.0810093342e-03 displacement16
                     -4.8624488676e-02 displacement17
                     -4.0258982529e-02 displacement18
                     -1.4679821161e-01 displacement19
                      1.3661226064e-01 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.1467967123e-07  4.2978608302e-06 ] displacement01 gradient
 [ -2.1648094143e-07 -1.5967214487e-06 ] displacement02 gradient
 [ -2.1830497744e-07 -7.5908897665e-06 ] displacement03 gradient
 [ -2.2015216454e-07 -1.3686542963e-05 ] displacement04 gradient
 [ -2.2202289616e-07 -1.9885622958e-05 ] displacement05 gradient
 [ -2.2391757417e-07 -2.6190115904e-05 ] displacement06 gradient
 [ -2.2583660900e-07 -3.2602053372e-05 ] displacement07 gradient
 [ -2.2778041994e-07 -3.9123513573e-05 ] displacement08 gradient
 [ -2.2974943535e-07 -4.5756622619e-05 ] displacement09 gradient
 [ -2.3174409285e-07 -5.2503555824e-05 ] displacement10 gradient
 [ -2.3376483964e-07 -5.9366539045e-05 ] displacement11 gradient
 [ -2.3581213269e-07 -6.6347850061e-05 ] displacement12 gradient
 [ -2.3788643902e-07 -7.3449820007e-05 ] displacement13 gradient
 [ -2.3998823598e-07 -8.0674834841e-05 ] displacement14 gradient
 [ -2.4211801148e-07 -8.8025336864e-05 ] displacement15 gradient
 [ -2.4427626434e-07 -9.5503826293e-05 ] displacement16 gradient
 [ -2.4646350453e-07 -1.0311286287e-04 ] displacement17 gradient
 [ -2.4868025347e-07 -1.1085506755e-04 ] displacement18 gradient
 [ -2.5092704439e-07 -1.1873312420e-04 ] displacement19 gradient
 [ -2.5320442259e-07 -1.2674978141e-04 ] displacement20 gradient


   10   14  0.118      0.73     0.73     0.02      G    3.e-14  1.e+06  0.73   

---------------------
Begin Evaluation   37
---------------------
Parameters for evaluation 37:
                      2.9746619053e+07 E0
                     -4.8537732858e+03 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.37 results.out.37

Active response data for evaluation 37:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                     -3.9826056881e-02 displacement01
                      1.2562378192e-01 displacement02
                     -1.3755049264e-01 displacement03
                      3.6164323190e-02 displacement04
                      7.6121555812e-02 displacement05
                     -8.5505764358e-02 displacement06
                     -8.3616491404e-02 displacement07
                      6.5110147593e-02 displacement08
                     -1.0131158993e-03 displacement09
                      2.2390666973e-01 displacement10
                     -1.1630117216e-01 displacement11
                     -1.0144579471e-01 displacement12
                     -9.8555395942e-02 displacement13
                      1.9791211312e-01 displacement14
                      2.8185000218e-02 displacement15
                     -6.4633462508e-03 displacement16
                     -4.7845455291e-02 displacement17
                     -3.7278181328e-02 displacement18
                     -1.4157439216e-01 displacement19
                      1.4412122315e-01 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation   38
---------------------
Parameters for evaluation 38:
                      2.9776365672e+07 E0
                     -4.8537732858e+03 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.38 results.out.38

Active response data for evaluation 38:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                     -4.6153175412e-02 displacement01
                      1.1923998701e-01 displacement02
                     -1.4399172890e-01 displacement03
                      2.9664866802e-02 displacement04
                      6.9563086365e-02 displacement05
                     -9.2124054260e-02 displacement06
                     -9.0295423952e-02 displacement07
                      5.8369735072e-02 displacement08
                     -7.8158612074e-03 displacement09
                      2.1704072297e-01 displacement10
                     -1.2323120523e-01 displacement11
                     -1.0844081559e-01 displacement12
                     -1.0561632307e-01 displacement13
                      1.9078434389e-01 displacement14
                      2.0989435232e-02 displacement15
                     -1.3727678870e-02 displacement16
                     -5.5179546087e-02 displacement17
                     -4.4683039962e-02 displacement18
                     -1.4905104787e-01 displacement19
                      1.3657172107e-01 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation   39
---------------------
Parameters for evaluation 39:
                      2.9746619053e+07 E0
                     -4.8586270591e+03 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.39 results.out.39

Active response data for evaluation 39:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                     -3.9846725387e-02 displacement01
                      1.2563146492e-01 displacement02
                     -1.3751394659e-01 displacement03
                      3.6230254283e-02 displacement04
                      7.6217404602e-02 displacement05
                     -8.5379454285e-02 displacement06
                     -8.3459165262e-02 displacement07
                      6.5299056064e-02 displacement08
                     -7.9204708030e-04 displacement09
                      2.2416048896e-01 displacement10
                     -1.1601400009e-01 displacement11
                     -1.0112465475e-01 displacement12
                     -9.8199660036e-02 displacement13
                      1.9830308632e-01 displacement14
                      2.8611865689e-02 displacement15
                     -5.9999195371e-03 displacement16
                     -4.7344784026e-02 displacement17
                     -3.6739567495e-02 displacement18
                     -1.4099712265e-01 displacement19
                      1.4473787691e-01 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.1270042556e-07  4.2582348312e-06 ] displacement01 gradient
 [ -2.1460573060e-07 -1.5828904978e-06 ] displacement02 gradient
 [ -2.1653675148e-07 -7.5294105461e-06 ] displacement03 gradient
 [ -2.1849395307e-07 -1.3583472058e-05 ] displacement04 gradient
 [ -2.2047781080e-07 -1.9747273823e-05 ] displacement05 gradient
 [ -2.2248881094e-07 -2.6023068159e-05 ] displacement06 gradient
 [ -2.2452745087e-07 -3.2413162449e-05 ] displacement07 gradient
 [ -2.2659423947e-07 -3.8919920728e-05 ] displacement08 gradient
 [ -2.2868969734e-07 -4.5545765315e-05 ] displacement09 gradient
 [ -2.3081435718e-07 -5.2293178510e-05 ] displacement10 gradient
 [ -2.3296876415e-07 -5.9164704345e-05 ] displacement11 gradient
 [ -2.3515347614e-07 -6.6162950387e-05 ] displacement12 gradient
 [ -2.3736906422e-07 -7.3290589618e-05 ] displacement13 gradient
 [ -2.3961611297e-07 -8.0550362356e-05 ] displacement14 gradient
 [ -2.4189522086e-07 -8.7945078267e-05 ] displacement15 gradient
 [ -2.4420700066e-07 -9.5477618427e-05 ] displacement16 gradient
 [ -2.4655207986e-07 -1.0315093746e-04 ] displacement17 gradient
 [ -2.4893110107e-07 -1.1096806577e-04 ] displacement18 gradient
 [ -2.5134472250e-07 -1.1893211180e-04 ] displacement19 gradient
 [ -2.5379361836e-07 -1.2704626445e-04 ] displacement20 gradient


   11   15  0.115      0.023    0.023    0.002     G    0.      1.e+05  0.023  

---------------------
Begin Evaluation   40
---------------------
Parameters for evaluation 40:
                      2.9746942319e+07 E0
                     -4.8549276396e+03 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.40 results.out.40

Active response data for evaluation 40:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                     -3.9899798878e-02 displacement01
                      1.2555616568e-01 displacement02
                     -1.3761186985e-01 displacement03
                      3.6109300635e-02 displacement04
                      7.6073005896e-02 displacement05
                     -8.5547721206e-02 displacement06
                     -8.3651732254e-02 displacement07
                      6.5081748234e-02 displacement08
                     -1.0345456506e-03 displacement09
                      2.2389234039e-01 displacement10
                     -1.1630826751e-01 displacement11
                     -1.0144551970e-01 displacement12
                     -9.8547611264e-02 displacement13
                      1.9792754972e-01 displacement14
                      2.8208234047e-02 displacement15
                     -6.4321667630e-03 displacement16
                     -4.7806178509e-02 displacement17
                     -3.7230652331e-02 displacement18
                     -1.4151845265e-01 displacement19
                      1.4418573491e-01 displacement20



------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation   41
---------------------
Parameters for evaluation 41:
                      2.9776689261e+07 E0
                     -4.8549276396e+03 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.41 results.out.41

Active response data for evaluation 41:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                     -4.6226839315e-02 displacement01
                      1.1917243666e-01 displacement02
                     -1.4405305276e-01 displacement03
                      2.9609884692e-02 displacement04
                      6.9514563637e-02 displacement05
                     -9.2165997544e-02 displacement06
                     -9.0330665240e-02 displacement07
                      5.8341320883e-02 displacement08
                     -7.8373205807e-03 displacement09
                      2.1702634881e-01 displacement10
                     -1.2323836104e-01 displacement11
                     -1.0844061708e-01 displacement12
                     -1.0560863141e-01 displacement13
                      1.9079967050e-01 displacement14
                      2.1012541631e-02 displacement15
                     -1.3696644739e-02 displacement16
                     -5.5140433090e-02 displacement17
                     -4.4635693690e-02 displacement18
                     -1.4899531056e-01 displacement19
                      1.3663601062e-01 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation   42
---------------------
Parameters for evaluation 42:
                      2.9746942319e+07 E0
                     -4.8597825673e+03 Es
                      4.0000000000e+02 Y

blocking fork: python cantilever_residuals.py params.in.42 results.out.42

Active response data for evaluation 42:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                     -3.9920471820e-02 displacement01
                      1.2556385034e-01 displacement02
                     -1.3757531580e-01 displacement03
                      3.6175246283e-02 displacement04
                      7.6168876043e-02 displacement05
                     -8.5421382724e-02 displacement06
                     -8.3494370394e-02 displacement07
                      6.5270699997e-02 displacement08
                     -8.1342569239e-04 displacement09
                      2.2414621889e-01 displacement10
                     -1.1602102776e-01 displacement11
                     -1.0112430333e-01 displacement12
                     -9.8191789925e-02 displacement13
                      1.9831861770e-01 displacement14
                      2.8635203972e-02 displacement15
                     -5.9686255812e-03 displacement16
                     -4.7305382413e-02 displacement17
                     -3.6691902941e-02 displacement18
                     -1.4094103649e-01 displacement19
                      1.4480254681e-01 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.1269548879e-07  4.2581359913e-06 ] displacement01 gradient
 [ -2.1460118350e-07 -1.5828569599e-06 ] displacement02 gradient
 [ -2.1653260520e-07 -7.5292663910e-06 ] displacement03 gradient
 [ -2.1849021906e-07 -1.3583239983e-05 ] displacement04 gradient
 [ -2.2047450083e-07 -1.9746977497e-05 ] displacement05 gradient
 [ -2.2248593710e-07 -2.6022732258e-05 ] displacement06 gradient
 [ -2.2452502561e-07 -3.2412812697e-05 ] displacement07 gradient
 [ -2.2659227556e-07 -3.8919583928e-05 ] displacement08 gradient
 [ -2.2868820792e-07 -4.5545469399e-05 ] displacement09 gradient
 [ -2.3081335577e-07 -5.2292952575e-05 ] displacement10 gradient
 [ -2.3296826463e-07 -5.9164578697e-05 ] displacement11 gradient
 [ -2.3515349281e-07 -6.6162956591e-05 ] displacement12 gradient
 [ -2.3736961178e-07 -7.3290760537e-05 ] displacement13 gradient
 [ -2.3961720652e-07 -8.0550732208e-05 ] displacement14 gradient
 [ -2.4189687594e-07 -8.7945682671e-05 ] displacement15 gradient
 [ -2.4420923327e-07 -9.5478494457e-05 ] displacement16 gradient
 [ -2.4655490644e-07 -1.0315212371e-04 ] displacement17 gradient
 [ -2.4893453855e-07 -1.1096960238e-04 ] displacement18 gradient
 [ -2.5134878830e-07 -1.1893404056e-04 ] displacement19 gradient
 [ -2.5379833040e-07 -1.2704862882e-04 ] displacement20 gradient


   12   16  0.115      1.6e-07  1.6e-07  5.e-06    G    0.      3.e+02  1.6e-07

***** X- AND RELATIVE FUNCTION CONVERGENCE *****

FUNCTION     0.115048       RELDX        5.43e-06
FUNC. EVALS     16          GRAD. EVALS     13
PRELDF       1.59e-07       NPRELDF      1.59e-07

    I      FINAL X(I)        D(I)          G(I)

    1       2.97469e+07      1.00        3.84e-13
    2      -4854.93          0.000127    1.01e-10

------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> map at X performed previously and results retrieved

>>>>> Dakota finite difference gradient evaluation for x[1] + h:

---------------------
Begin Evaluation   43
---------------------
Parameters for evaluation 43:
                      2.9776689261e+07 E0
                     -4.8549276396e+03 Es
                      4.0000000000e+02 Y

Duplication detected: analysis_drivers not invoked.

Active response data retrieved from database:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                     -4.6226839315e-02 displacement01
                      1.1917243666e-01 displacement02
                     -1.4405305276e-01 displacement03
                      2.9609884692e-02 displacement04
                      6.9514563637e-02 displacement05
                     -9.2165997544e-02 displacement06
                     -9.0330665240e-02 displacement07
                      5.8341320883e-02 displacement08
                     -7.8373205807e-03 displacement09
                      2.1702634881e-01 displacement10
                     -1.2323836104e-01 displacement11
                     -1.0844061708e-01 displacement12
                     -1.0560863141e-01 displacement13
                      1.9079967050e-01 displacement14
                      2.1012541631e-02 displacement15
                     -1.3696644739e-02 displacement16
                     -5.5140433090e-02 displacement17
                     -4.4635693690e-02 displacement18
                     -1.4899531056e-01 displacement19
                      1.3663601062e-01 displacement20


>>>>> Dakota finite difference gradient evaluation for x[2] + h:

---------------------
Begin Evaluation   44
---------------------
Parameters for evaluation 44:
                      2.9746942319e+07 E0
                     -4.8597825673e+03 Es
                      4.0000000000e+02 Y

Duplication detected: analysis_drivers not invoked.

Active response data retrieved from database:
Active set vector = { 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 }
                     -3.9920471820e-02 displacement01
                      1.2556385034e-01 displacement02
                     -1.3757531580e-01 displacement03
                      3.6175246283e-02 displacement04
                      7.6168876043e-02 displacement05
                     -8.5421382724e-02 displacement06
                     -8.3494370394e-02 displacement07
                      6.5270699997e-02 displacement08
                     -8.1342569239e-04 displacement09
                      2.2414621889e-01 displacement10
                     -1.1602102776e-01 displacement11
                     -1.0112430333e-01 displacement12
                     -9.8191789925e-02 displacement13
                      1.9831861770e-01 displacement14
                      2.8635203972e-02 displacement15
                     -5.9686255812e-03 displacement16
                     -4.7305382413e-02 displacement17
                     -3.6691902941e-02 displacement18
                     -1.4094103649e-01 displacement19
                      1.4480254681e-01 displacement20


>>>>> Total response returned to iterator:

Active set vector = { 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 } Deriv vars vector = { 1 2 }
 [ -2.1269548879e-07  4.2581359913e-06 ] displacement01 gradient
 [ -2.1460118350e-07 -1.5828569599e-06 ] displacement02 gradient
 [ -2.1653260520e-07 -7.5292663910e-06 ] displacement03 gradient
 [ -2.1849021906e-07 -1.3583239983e-05 ] displacement04 gradient
 [ -2.2047450083e-07 -1.9746977497e-05 ] displacement05 gradient
 [ -2.2248593710e-07 -2.6022732258e-05 ] displacement06 gradient
 [ -2.2452502561e-07 -3.2412812697e-05 ] displacement07 gradient
 [ -2.2659227556e-07 -3.8919583928e-05 ] displacement08 gradient
 [ -2.2868820792e-07 -4.5545469399e-05 ] displacement09 gradient
 [ -2.3081335577e-07 -5.2292952575e-05 ] displacement10 gradient
 [ -2.3296826463e-07 -5.9164578697e-05 ] displacement11 gradient
 [ -2.3515349281e-07 -6.6162956591e-05 ] displacement12 gradient
 [ -2.3736961178e-07 -7.3290760537e-05 ] displacement13 gradient
 [ -2.3961720652e-07 -8.0550732208e-05 ] displacement14 gradient
 [ -2.4189687594e-07 -8.7945682671e-05 ] displacement15 gradient
 [ -2.4420923327e-07 -9.5478494457e-05 ] displacement16 gradient
 [ -2.4655490644e-07 -1.0315212371e-04 ] displacement17 gradient
 [ -2.4893453855e-07 -1.1096960238e-04 ] displacement18 gradient
 [ -2.5134878830e-07 -1.1893404056e-04 ] displacement19 gradient
 [ -2.5379833040e-07 -1.2704862882e-04 ] displacement20 gradient


<<<<< Function evaluation summary: 44 total (42 new, 2 duplicate)
<<<<< Best parameters          =
                      2.9746942319e+07 E0
                     -4.8549276396e+03 Es
                      4.0000000000e+02 Y
<<<<< Best residual terms =
                     -3.9899798878e-02
                      1.2555616568e-01
                     -1.3761186985e-01
                      3.6109300635e-02
                      7.6073005896e-02
                     -8.5547721206e-02
                     -8.3651732254e-02
                      6.5081748234e-02
                     -1.0345456506e-03
                      2.2389234039e-01
                     -1.1630826751e-01
                     -1.0144551970e-01
                     -9.8547611264e-02
                      1.9792754972e-01
                      2.8208234047e-02
                     -6.4321667630e-03
                     -4.7806178509e-02
                     -3.7230652331e-02
                     -1.4151845265e-01
                      1.4418573491e-01
<<<<< Best residual norm =  4.7968348487e-01; 0.5 * norm^2 =  1.1504812283e-01
<<<<< Best data captured at function evaluation 40

Confidence Intervals on Calibrated Parameters:
            E0: [ 2.9310006145e+07, 3.0183878493e+07 ]
            Es: [ -6.3036287757e+03, -3.4062265035e+03 ]

<<<<< Iterator nl2sol completed.
<<<<< Environment execution completed.
DAKOTA execution time in seconds:
  Total CPU        =   0.107367 [parent =   0.107359, child =      8e-06]
  Total wall clock =    8.58149
